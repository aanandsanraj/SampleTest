import requests
from requests.auth import HTTPBasicAuth
import csv
from unidecode import unidecode


def normalize_values(v):
    if isinstance(v, list):
        return str(v[0]).encode('utf-8').strip().decode()
    else:
        return str(v).encode('utf-8').strip().decode()


# List of attributes for the cn=kochid view query
kochid_unique_keys = [
    'personnelidentifier',
    'userprincipalname',
    'firstname',
    'lastname',
    'samaccountname',
    'financeenterprisegroup',
    'mail',
    'activesupervisorfirstname',
    'activesupervisorlastname',
    'activesupervisorpersonnelidentifier',
    'kochcompany',
    'accountingunit',
    'accountingunitdescription',
    'relationshipstatus',
    'hiredate',
    'terminationdate',
    'city',
    'countrydescription',
    'facilitydescription',
    'positioncode',
    'positiondescription',
    'relationshiptoorganization'

]

# Get data from VDS cn=kochid view
kochid_data = requests.get(
    'https://directory.int.kochid.com/adap/cn=kochid?filter=(userprincipalname=*)'
    '&attributes=personnelidentifier,userprincipalname,firstname,lastname,samaccountname,financeenterprisegroup,mail,'
    'activesupervisorfirstname,activesupervisorlastname,activesupervisorpersonnelidentifier,kochcompany,'
    'accountingunit,accountingunitdescription,relationshipstatus,terminationdate,hiredate,city,countrydescription,'
    'facilitydescription,positioncode,positiondescription,relationshiptoorganization&sizeLimit=0',
    auth=HTTPBasicAuth('DWFDEV24@molex.com', 'pV0^GPXJpd2-D_rj')
).json()

# Open CSV file and write data
with open(
        'C:\Users\anandr3\OneDrive - kochind.com\Documents\UiPath\sqldata.csv', 'w', encoding="utf-8"
) as csvfile:
    writer = csv.DictWriter(csvfile, fieldnames=kochid_unique_keys)
    writer.writeheader()
    for user in kochid_data['resources']:
        writer.writerow(
            {
                'personnelidentifier': unidecode(normalize_values(user['attributes'].get('personnelidentifier', ''))),
                'userprincipalname': unidecode(normalize_values(user['attributes'].get('userprincipalname', ''))),
                'firstname': unidecode(normalize_values(user['attributes'].get('firstname', ''))),
                'lastname': unidecode(normalize_values(user['attributes'].get('lastname', ''))),
                'samaccountname': unidecode(normalize_values(user['attributes'].get('samaccountname', ''))),
                'financeenterprisegroup': unidecode(
                    normalize_values(user['attributes'].get('financeenterprisegroup', ''))
                ),
                'mail': unidecode(normalize_values(user['attributes'].get('mail', ''))),
                'activesupervisorfirstname': unidecode(
                    normalize_values(user['attributes'].get('activesupervisorfirstname', ''))
                ),
                'activesupervisorlastname': unidecode(
                    normalize_values(user['attributes'].get('activesupervisorlastname', ''))
                ),
                'activesupervisorpersonnelidentifier': unidecode(
                    normalize_values(user['attributes'].get('activesupervisorpersonnelidentifier', ''))
                ),
                'kochcompany': unidecode(normalize_values(user['attributes'].get('kochcompany', ''))),
                'accountingunit': unidecode(normalize_values(user['attributes'].get('accountingunit', ''))),
                'accountingunitdescription': unidecode(
                    normalize_values(user['attributes'].get('accountingunitdescription', ''))),
                'relationshipstatus': unidecode(
                    normalize_values(user['attributes'].get('relationshipstatus', ''))),
                'terminationdate': unidecode(
                    normalize_values(user['attributes'].get('terminationdate', ''))),
                'hiredate': unidecode(normalize_values(user['attributes'].get('hiredate', ''))),
                'city': unidecode(normalize_values(user['attributes'].get('city', ''))),
                'countrydescription': unidecode(normalize_values(user['attributes'].get('countrydescription', ''))),
                'facilitydescription': unidecode(
                    normalize_values(user['attributes'].get('facilitydescription', ''))),
                'positioncode': unidecode(
                    normalize_values(user['attributes'].get('positioncode', ''))),
                'positiondescription': unidecode(
                    normalize_values(user['attributes'].get('positiondescription', ''))),
                'relationshiptoorganization': unidecode(
                    normalize_values(user['attributes'].get('relationshiptoorganization', '')))
            }
        )
